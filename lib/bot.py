from murasaki import Murasaki
from settings import MURASAKI_USER, MURASAKI_PASSWORD

def parse_unit(transitionUnit):
    s = transitionUnit
    s = s.replace("(", ", ").replace(")", "")
    if "," in s:
        name, unit = s.split(",")
        name = name.lower().strip()
        unit = unit.strip()

    else:
        name = s.lower()
        unit = None

    return {
        "Name": name,
        "Unit": unit,
    } 

def determine_development(change, stable_threshold=0.01):
    if abs(change) <= stable_threshold:
        return "stable"
    elif change > 0:
        return "increase"
    elif change < 0:
        return "decrease"

def more_or_less(diff, same_level_threshold=0.01):
    if abs(diff) <= same_level_threshold:
        return "same"
    elif diff > 0:
        return "more"
    elif diff < 0:
        return "less"


def generate_summary(now, then):
    murasaki_api = Murasaki("https://jplusplus-murasaki.herokuapp.com/",
                            user=MURASAKI_USER, password=MURASAKI_PASSWORD)

    context = {
        "Now": now,
        "Then": then,
    }

    context["Unit"] = parse_unit(now["transitionUnit"])
    context["Now"]["vsTarget"] = more_or_less(now["targetDiffPct"])

    try:
        context["ChangePct"] = now["outcomeLatestValue"] / then["outcomeLatestValue"] - 1
        context["Dev"] = more_or_less(context["ChangePct"])
        context["Then"]["vsTarget"] = more_or_less(then["targetDiffPct"])

    except ZeroDivisionError:
        context["ChangePct"] = None
        context["Dev"] = more_or_less(now["outcomeLatestValue"])
    
    except TypeError:
        # outcomeLatestValue 칛r None
        context["ChangePct"] = None
        context["Dev"] = None
    
    template = """
- const StableThreshold = 0.01
- const 칬verEllerUnder = diff => diff > 0 ? "칬ver" : "under"

p Datauppdatering p친 Panorama!

hr

p Det har kommit nya siffror om <strong>#{ Now.title.toLowerCase() }</strong> f칬r <strong>#{ Math.round(Now.outcomeLatestYear) }</strong>. 

p Det m친tt som f칬ljs upp 칛r <strong>#{ Unit.Name }</strong> (m칛tt i #{ Unit.Unit }).

hr

h3 Hur ligger vi till?

p H칛r 칛r vi: #{ number( Now.outcomeLatestValue ) } #{ Unit.Unit }
p Vi borde vara p친: #{ number( Now.targetLatestValue ) } #{ Unit.Unit }
p Vi ligger allts친 
    strong
        if Now.vsTarget == "same"
            | ungef칛r d칛r vi borde vara

        else if Now.vsTarget == "less"
            | s칛mre 칛n m친let 游땩

        else if Now.vsTarget == "more"
            | b칛ttre 칛n m친let 游땕
    |.  


if Then.vsTarget        
    hr

    h3 Vart친t pekar utvecklingen?

    p 
        | 칀r #{ Math.round(Then.outcomeLatestYear) } l친g vi 

        if Then.vsTarget == "same"
            | i linje med m친lbanan,  

        else if Then.vsTarget == "less"
            | #{ percent(Math.abs(Then.targetDiffPct)) } procent under m친lbanan, 

        else if Then.vsTarget == "more"
            | #{ percent(Then.targetDiffPct) } procent 칬ver m친lbanan, 

        else
            | ERROR: #{Then.vsTarget}
                
        
        | i dag ligger vi  
        if Now.vsTarget == "same"
            | i linje.  

        else if Now.vsTarget == "less"
            | #{ percent(Math.abs(Now.targetDiffPct)) } procent under. 

        else if Now.vsTarget == "more"
            | #{ percent(Now.targetDiffPct) } procent 칬ver. 

        
        if Math.abs(Now.targetDiffPct - Then.targetDiffPct) > 0.01
            | Utvecklingen g친r allts친 친t 
            strong
                if Now.targetDiffPct > Then.targetDiffPct
                    | r칛tt h친ll 游땕
                
                else
                    | fel h친ll 游땩

            |. 

hr

h3 Hur avg칬rande 칛r den h칛r indikatorn?

p #{ Now.title } st친r i Panoramas scenario f칬r <strong>#{ percent(Now.co2e / 47.75) } procent</strong> av utsl칛ppsminskningen.  
        
p
    a(href=`https://app.climateview.global/v3/public/board/ec2d0cdf-e70e-43fb-85cb-ed6b31ee1e09?id=${Now.id}`)
        | L칛s mer om den h칛r indikatorn p친 Panorama.

    """

    return murasaki_api.pug(context, template) 